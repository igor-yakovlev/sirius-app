import Head from 'next/head'
import { css } from '@emotion/css';
import backgroundImage from '../images/background-menu.jpg'
import React, { BaseSyntheticEvent, useState } from 'react';
import Button from "../components/Button";
import InputRange from "../components/InputRange";
import InputRadio from "../components/InputRadio";
import Link from "next/link";
import CustomRange from "../components/CustomRange";

const data = ['2', '3', '4', '5'];
const data1 = ['A', '9', '19', '50', '99', '999'];


const initialState = {
  countSubject: '2',
  values: 2,
  direction: 'ascending'
};

const mapValues: Record<number, string> = {
  1: "A",
  2: "9",
  3: "19",
  4: "50",
  5: "99",
  6: "999"
};

const getValues = (values: number = 1) => mapValues[values];


export default function Home() {
  const [formData, setFormData] = useState(initialState);
  const [direction, setDirection] = useState('ascending');

  const handleChange = (e: BaseSyntheticEvent) => {
    const {name, value} = e.target;

    setFormData(state => ({...state, [name]: value}))
  }

  const directionChange = (e: BaseSyntheticEvent) => {
    setDirection(e.target.value);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main className={css`
        background-image: url(${backgroundImage.src});
        background-repeat: no-repeat;
        background-size: cover;
        width: 100%;
        min-height: 100vh;
        display: grid;
        place-items: center;
      `}>
        <div className={css`
          background: linear-gradient(198.7deg, #7F75F0 -40.02%, #101F32 96.22%);
          border-radius: 20px;
          padding: 20px;
        `}>
          <form className={css`
            background: #FFFFFF;
            border-radius: 20px;
            padding: 37px 64px 29px 64px;
            display: flex;
            flex-direction: column;
            align-items: center;
          `}>
            <div className={css`
              width: 366px;
              margin-bottom: 53px;`}>
              <InputRange id={'subject'} data={data} label={'Кол-во предметов'} onChange={handleChange}
                          name={'countSubject'} min={2} max={5} value={formData.countSubject}/>
            </div>

            <div className={css`
              width: 531px;
              margin-bottom: 53px;`}>
              <InputRange id={'importance'} data={data1} label={'Значения'} onChange={handleChange}
                          name={'values'} min={1} max={6} value={formData.values}/>
            </div>

            <div className={css`display: flex;
              gap: 36px;
              width: 100%;
              margin-bottom: 92px;`}
                 onChange={directionChange}
            >
              <InputRadio id={'radio-1'} name={'direction'} value={'ascending'} label={'По возрастанию'}
                          onChange={handleChange} checked={direction === 'ascending'}/>
              <InputRadio id={'radio-2'} name={'direction'} value={'descending'} label={'По убыванию'}
                          onChange={handleChange} checked={direction === 'descending'}/>
            </div>
            <Link href={{pathname: '/game', query: {...formData, values: getValues(formData.values)}}}>
              <Button>Играть</Button>
            </Link>

          </form>
        </div>
      </main>
    </>
  )
}

